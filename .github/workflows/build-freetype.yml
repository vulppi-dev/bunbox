name: Build FreeType

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths: ['.github/workflows/build-freetype.yml']

jobs:
  build:
    name: Build ${{ matrix.id }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: linux-x64
            os: ubuntu-22.04
            target_os: linux
            arch: x64
            is_cross: false

          - id: linux-arm64
            os: ubuntu-22.04
            target_os: linux
            arch: arm64
            is_cross: true

          - id: macos-x64
            os: macos-14
            target_os: macos
            arch: x64
            cmake_arch: x86_64
            osx_min: '10.15.4'

          - id: macos-arm64
            os: macos-14
            target_os: macos
            arch: arm64
            cmake_arch: arm64
            osx_min: '11.0'

          - id: windows-x64
            os: windows-2022
            target_os: windows
            arch: x64

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.id }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 3 }

      # ---------- Linux ARM64 toolchain (only if cross) ----------
      - name: Prepare cross-compilation for ARM64
        if: matrix.target_os == 'linux' && matrix.is_cross == true
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -yq update
          DEBIAN_FRONTEND=noninteractive sudo apt-get -yq install cmake gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross

      # ---------- Build (Linux) ----------
      - name: Build FreeType (Linux)
        if: matrix.target_os == 'linux'
        run: |
          git clone --depth 1 https://github.com/freetype/freetype.git freetype
          cd freetype
          if [ "${{ matrix.is_cross }}" = "true" ]; then
            cat > toolchain-aarch64.cmake << 'EOF'
            set(CMAKE_SYSTEM_NAME Linux)
            set(CMAKE_SYSTEM_PROCESSOR aarch64)
            set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)
            set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)
            set(CMAKE_FIND_ROOT_PATH /usr/aarch64-linux-gnu)
            set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
            set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
            set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
            EOF
            cmake -S . -B build \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=toolchain-aarch64.cmake \
              -DBUILD_SHARED_LIBS=ON \
              -DFT_DISABLE_HARFBUZZ=ON \
              -DFT_DISABLE_BZIP2=ON \
              -DFT_DISABLE_PNG=ON \
              -DFT_DISABLE_BROTLI=ON
            cmake --build build --config Release
            aarch64-linux-gnu-strip build/libfreetype.so* || true
          else
            cmake -S . -B build \
              -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=ON \
              -DFT_DISABLE_HARFBUZZ=ON \
              -DFT_DISABLE_BZIP2=ON \
              -DFT_DISABLE_PNG=ON \
              -DFT_DISABLE_BROTLI=ON
            cmake --build build --config Release
            strip build/libfreetype.so* || true
          fi

      # ---------- Build (macOS) ----------
      - name: Build FreeType (macOS)
        if: matrix.target_os == 'macos'
        run: |
          git clone --depth 1 https://github.com/freetype/freetype.git freetype
          cd freetype
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=${{ matrix.cmake_arch }} \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=${{ matrix.osx_min }} \
            -DBUILD_SHARED_LIBS=ON \
            -DFT_DISABLE_HARFBUZZ=ON \
            -DFT_DISABLE_BZIP2=ON \
            -DFT_DISABLE_PNG=ON \
            -DFT_DISABLE_BROTLI=ON
          cmake --build build --config Release
          strip -u -r build/libfreetype*.dylib || true

      # ---------- Build (Windows) ----------
      - name: Setup MSVC
        if: matrix.target_os == 'windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Build FreeType (Windows)
        if: matrix.target_os == 'windows'
        shell: cmd
        run: |
          git clone --depth 1 https://github.com/freetype/freetype.git freetype
          cd freetype
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DFT_DISABLE_HARFBUZZ=ON -DFT_DISABLE_BZIP2=ON -DFT_DISABLE_PNG=ON -DFT_DISABLE_BROTLI=ON
          cmake --build build --config Release

      # ---------- Artifacts ----------
      - name: Prepare artifacts
        run: |
          mkdir -p artifacts/${{ matrix.target_os }}/${{ matrix.arch }}
          if [ "${{ matrix.target_os }}" = "linux" ]; then
            cp freetype/build/libfreetype*.so* artifacts/${{ matrix.target_os }}/${{ matrix.arch }}/ || true
            [ -e artifacts/${{ matrix.target_os }}/${{ matrix.arch }}/libfreetype.so ] || \
              find freetype/build -maxdepth 1 -name "libfreetype*.so*" -exec bash -lc 'cp "$1" artifacts/${{ matrix.target_os }}/${{ matrix.arch }}/libfreetype.so' _ {} \; -quit 2>/dev/null || true
          elif [ "${{ matrix.target_os }}" = "macos" ]; then
            find freetype/build -name "libfreetype*.dylib" -exec cp {} artifacts/${{ matrix.target_os }}/${{ matrix.arch }}/libfreetype.dylib \;
          else
            cp freetype\\build\\Release\\freetype.dll artifacts\\${{ matrix.target_os }}\\${{ matrix.arch }}\\freetype.dll
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: freetype-${{ matrix.id }}
          path: artifacts/
          retention-days: 7
