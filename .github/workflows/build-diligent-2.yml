name: Build Diligent (shared libs)

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - '.github/workflows/build-diligent-2.yml'

jobs:
  linux-x64:
    name: Linux x64
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: Install build deps (X11 + Vulkan)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build \
            libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev \
            libgl1-mesa-dev libwayland-dev libxkbcommon-dev \
            libvulkan-dev mesa-vulkan-drivers python3-distutils

      - name: Clone Diligent (with submodules)
        run: |
          git clone --depth 1 --recursive https://github.com/DiligentGraphics/DiligentEngine.git DiligentEngine

      - name: Configure (Release, GL+Vulkan only)
        run: |
          cmake -S DiligentEngine -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DDILIGENT_BUILD_SAMPLES=OFF \
            -DDILIGENT_BUILD_TOOLS=OFF \
            -DDILIGENT_BUILD_FX=OFF \
            -DDILIGENT_NO_WEBGPU=ON

      - name: Build shared libs (GL + Vulkan)
        run: |
          cmake --build build --config Release --target \
            Diligent-GraphicsEngineOpenGL-shared \
            Diligent-GraphicsEngineVk-shared

      - name: Strip and collect artifacts
        run: |
          mkdir -p artifacts/x64/linux
          # tenta encontrar e copiar as .so relevantes
          find build -type f -name "libGraphicsEngine*.so*" -exec strip {} \; -exec cp {} artifacts/x64/linux/ \; || true
          # fallback: copie qualquer coisa que comece com libGraphicsEngine
          if [ -z "$(ls -A artifacts/x64/linux)" ]; then
            find build -type f -name "libGraphicsEngine*.so*" -exec cp {} artifacts/x64/linux/ \; || true
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64
          path: artifacts/
          retention-days: 7

  linux-arm64:
    name: Linux ARM64 (cross)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: Cross toolchain + Vulkan:arm64
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
          # habilita repositÃ³rio arm64 e instala libvulkan-dev:arm64
          sudo dpkg --add-architecture arm64
          sudo apt-get update || true
          sudo apt-get -yq --allow-unauthenticated install libvulkan-dev:arm64

      - name: Clone Diligent (with submodules)
        run: |
          git clone --depth 1 --recursive https://github.com/DiligentGraphics/DiligentEngine.git DiligentEngine

      - name: Configure toolchain (aarch64)
        run: |
          cat > toolchain-aarch64.cmake << 'EOF'
          set(CMAKE_SYSTEM_NAME Linux)
          set(CMAKE_SYSTEM_PROCESSOR aarch64)
          set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)
          set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)
          set(CMAKE_FIND_ROOT_PATH /usr/aarch64-linux-gnu)
          set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
          set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
          set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
          EOF

      - name: Configure (Release, Vulkan only to simplificar cross)
        run: |
          cmake -S DiligentEngine -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=toolchain-aarch64.cmake \
            -DDILIGENT_BUILD_SAMPLES=OFF \
            -DDILIGENT_BUILD_TOOLS=OFF \
            -DDILIGENT_BUILD_FX=OFF \
            -DDILIGENT_NO_OPENGL=ON \
            -DDILIGENT_NO_WEBGPU=ON

      - name: Build shared lib (Vulkan)
        run: |
          cmake --build build --config Release --target Diligent-GraphicsEngineVk-shared || echo "arm64 Vulkan build falhou, seguindo..."

      - name: Coletar artifacts
        run: |
          mkdir -p artifacts/arm64/linux
          find build -type f -name "libGraphicsEngine*.so*" -exec cp {} artifacts/arm64/linux/ \; || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64
          path: artifacts/
          retention-days: 7

  macos:
    name: macOS
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64, arm64]
        include:
          - ARCH: x64
            PLATFORM: osx-x64
            CMAKE_ARCH: x86_64
            OSX_MIN: '10.15'
          - ARCH: arm64
            PLATFORM: osx-arm64
            CMAKE_ARCH: arm64
            OSX_MIN: '11.0'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: Clone Diligent (with submodules)
        run: |
          git clone --depth 1 --recursive https://github.com/DiligentGraphics/DiligentEngine.git DiligentEngine

      - name: Configure (Release, OpenGL only)
        run: |
          cmake -S DiligentEngine -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=${{ matrix.CMAKE_ARCH }} \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=${{ matrix.OSX_MIN }} \
            -DDILIGENT_BUILD_SAMPLES=OFF \
            -DDILIGENT_BUILD_TOOLS=OFF \
            -DDILIGENT_BUILD_FX=OFF \
            -DDILIGENT_NO_VULKAN=ON \
            -DDILIGENT_NO_METAL=ON \
            -DDILIGENT_NO_WEBGPU=ON

      - name: Build shared lib (OpenGL)
        run: |
          cmake --build build --config Release --target Diligent-GraphicsEngineOpenGL-shared

      - name: Strip e empacotar
        run: |
          mkdir -p artifacts/${{ matrix.ARCH }}/darwin
          find build -type f -name "libGraphicsEngine*.dylib" -exec strip -u -r {} \; -exec cp {} artifacts/${{ matrix.ARCH }}/darwin/ \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.ARCH }}
          path: artifacts/
          retention-days: 7

  windows-x64:
    name: Windows x64
    runs-on: windows-2022
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Clone Diligent (with submodules)
        run: |
          git clone --depth 1 --recursive https://github.com/DiligentGraphics/DiligentEngine.git DiligentEngine

      - name: Configure (Release, D3D11/D3D12/GL; Vulkan off)
        run: |
          cmake -S DiligentEngine -B build -G "Visual Studio 17 2022" -A x64 ^
            -DDILIGENT_BUILD_SAMPLES=OFF ^
            -DDILIGENT_BUILD_TOOLS=OFF ^
            -DDILIGENT_BUILD_FX=OFF ^
            -DDILIGENT_NO_VULKAN=ON ^
            -DDILIGENT_NO_WEBGPU=ON

      - name: Build shared libs
        run: |
          cmake --build build --config Release --target ^
            Diligent-GraphicsEngineD3D11-shared ^
            Diligent-GraphicsEngineD3D12-shared ^
            Diligent-GraphicsEngineOpenGL-shared

      - name: Coletar DLLs
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path artifacts\x64\win32 | Out-Null
          Get-ChildItem -Recurse -Path build -Filter "GraphicsEngine*.dll" | Copy-Item -Destination artifacts\x64\win32 -Force

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64
          path: artifacts/
          retention-days: 7
