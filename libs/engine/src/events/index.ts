import type { DisplayEvent } from './DisplayEvent';
import type { Event } from './Event';
import type { KeyEvent } from './KeyEvent';
import type { LocaleEvent } from './LocaleEvent';
import type { QuitEvent } from './QuitEvent';
import type { ThemeEvent } from './ThemeEvent';
import type { WindowEvent } from './WindowEvent';
import type { TextEvent } from './TextEvent';

export * from './DisplayEvent';
export * from './Event';
export * from './KeyEvent';
export * from './LocaleEvent';
export * from './QuitEvent';
export * from './ThemeEvent';
export * from './WindowEvent';
export * from './TextEvent';

export type SDL_EventMap = {
  quit: [QuitEvent];
  terminating: [Event];
  lowMemory: [Event];
  locale: [LocaleEvent];
  theme: [ThemeEvent];
  orientation: [DisplayEvent];
  displayAdded: [DisplayEvent];
  displayRemoved: [DisplayEvent];
  displayMove: [DisplayEvent];
  displayChange: [DisplayEvent];
  windowShown: [WindowEvent];
  windowHidden: [WindowEvent];
  windowMove: [WindowEvent];
  windowResize: [WindowEvent];
  windowMinimized: [WindowEvent];
  windowMaximized: [WindowEvent];
  windowRestored: [WindowEvent];
  windowPointerEnter: [WindowEvent];
  windowPointerLeave: [WindowEvent];
  windowFocus: [WindowEvent];
  windowBlur: [WindowEvent];
  windowClose: [WindowEvent];
  windowDisplayChanged: [WindowEvent];
  windowFullscreenEnter: [WindowEvent];
  windowFullscreenLeave: [WindowEvent];
  windowDestroy: [WindowEvent];
  keyDown: [KeyEvent];
  keyUp: [KeyEvent];
  keymapChange: [Event];
  text: [TextEvent];
  textEdit: [TextEvent];
  textEditCandidates: [TextEvent];
};
